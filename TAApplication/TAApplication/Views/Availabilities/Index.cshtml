<!--
Author:    Sebastian Ramirez
Partner:   Noah Carlson
Date:      Oct 8, 2022
Course:    CS 4540, University of Utah, School of Computing
Copyright: CS 4540 and Noah Carlson, Sebastian Ramirez - This work may not be copied for use in Academic Coursework.
I, Sebastian Ramirez and Noah Carlson, certify that I wrote this code from scratch and did not copy it in part or whole from
another source.  Any references used in the completion of the assignment are cited in my README file.
File Contents
This file contains the html for Availability
-->


@using Microsoft.AspNetCore.Identity
@using TAApplication.Areas.Data
@model TAApplication.Models.Availability
@inject UserManager<TAUser> um
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pixi.js/6.2.0/browser/pixi.js"></script>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<div id="canvas_div">
</div>
<button id="save-button" type="button" class="btn btn-primary" onclick="Save_Availability('@um.GetUserAsync(User).Result.Id')">Save</button>
<div id="saving-spinner" class="spinner-border text-primary" role="status">
    <span class="sr-only">Loading...</span>
</div>


<script src="~/js/Availability/setup.js" type="text/javascript"></script>
<script src="~/js/Availability/availability.js" type="text/javascript"></script>
<script type="text/javascript">

    $(function () {
        let spinner = document.getElementById("saving-spinner");
        spinner.hidden = true;
        setup_pixi(800, 800);

        $.ajax({
            type: "GET",
            dataType: "json",
            url: "/Availabilities/GetSchedule",
            data: {
                userid: "@um.GetUserId(User)"
            },
            success: function (data) {
                let x = 100;
                let slots = data;
                let days = [slots.Monday, slots.Tuesday, slots.Wednesday, slots.Thursday, slots.Friday];
                //Draw slots
                for (let i = 0; i < 5; i++) {
                    for (let j = 0; j < 48; j++) {
                        let slot = new Slot(j + (i * 48), x, 50 + j * 10, days[i].charAt(j) == 1);
                        app.stage.addChild(slot);
                    }
                    x += 110;
                }
                //Draw lines
                const hours = ["8:00 am", "9:00 am", "10:00 am", "11:00 am", "12:00 pm", "1:00 pm", "2:00 pm", "3:00 pm", "4:00 pm", "5:00 pm", "6:00 pm", "7:00 pm", "8:00 pm"]
                for (let i = 0; i < 13; i++) {
                    let line = new PIXI.Graphics();
                    app.stage.addChild(line);
                    line.lineStyle({
                        width: 1, color: 0x000000
                    }).moveTo(100 - 15, 50 + ((i) * 4) * 10).lineTo(x + 5, 50 + ((i) * 4) * 10);

                    var timeText = new PIXI.Text(hours[i],
                        {
                            fontFamily: 'Arial',
                            fontSize: 14,
                            fill: 0x000000,
                            align: 'center',
                        });
                    app.stage.addChild(timeText);
                    timeText.x = x + 15;
                    timeText.y = 42 + ((i) * 4) * 10

                }
                drawDays();
            },
            error: function (data) {
                alert("error");
            }
        });
        

        

    });

</script>

@*<script type="text/javascript">
    //$("#save_me").hide();

    let bg_color = 0xabcdef;

    app = new PIXI.Application({ backgroundColor: bg_color });
    app.renderer.resize(800, 800);
    let mousedown = false;
    var typeselected = false;
    $("#canvas_div").append(app.view);

    $("#canvas_div").on('mousedown', function (e) {
        mousedown = true;
    });

    $("#canvas_div").on('mouseup', function (e) {
        mousedown = false;
    });

    class Slot extends PIXI.Graphics {
        on_color = 0xbb500;
        off_color = 0xbbbbbb;
        selected = false;
        width = 100;
        height = 10;
        //text;

        color = 0xffffff;

        constructor(id, x, y, isSelected = false) {
            super();

            this.x = x;
            this.y = y;
            this.id = id;
            this.selected = isSelected;
            //this.text = new PIXI.Text(`I am ${id}`);

            this.interactive = true;

            this.init_draw();

            app.stage.addChild(this);
            this.on('mousedown', function (e) {
                if (this.selected) {
                    typeselected = true;
                }
                else {
                    typeselected = false;
                }
                this.draw_me();
            });

            this.on('mousemove', function (e) {
                if (mousedown) {
                    if (e.data.global.x >= this.x && e.data.global.x <= this.x + this.width
                        && e.data.global.y >= this.y && e.data.global.y <= this.y + this.height) {
                        this.draw_me();
                    }
                }
            });

        }

        draw_me() {
            if (typeselected == this.selected) {
                this.selected = !this.selected;
                if (typeselected) {
                    this.clear();
                    this.beginFill(this.off_color);
                    this.drawRect(0, 0, this.width, this.height);
                }
                else {
                    this.clear();
                    this.beginFill(this.on_color);
                    this.drawRect(0, 0, this.width, this.height);
                }
            }
        }

        init_draw() {
            this.clear();
            this.beginFill(this.off_color);
            this.drawRect(0, 0, this.width, this.height);
        }

    }




    /////////////////////// Main Program ///////////////////
    let x = 100;
    for (let i = 0; i < 5; i++) {
        for (let j = 0; j < 48; j++) {
            new Slot(j + (i * 48), x, 50 + j * 10);
        }
        x += 110;
    }

    const hours = ["8:00 am", "9:00 am", "10:00 am", "11:00 am", "12:00 pm", "1:00 pm", "2:00 pm", "3:00 pm", "4:00 pm", "5:00 pm", "6:00 pm", "7:00 pm", "8:00 pm"]
    for (let i = 0; i < 13; i++) {
        let line = new PIXI.Graphics();
        app.stage.addChild(line);
        line.lineStyle({
            width: 1,  color: 0x000000
        }).moveTo(100 - 15, 50 + ((i) * 4) * 10).lineTo(x+5, 50+((i) * 4) * 10);

        var timeText = new PIXI.Text(hours[i],
            {
                fontFamily: 'Arial',
                fontSize: 14,
                fill: 0x000000,
                align: 'center',
            });
        app.stage.addChild(timeText);
        timeText.x = x + 15;
        timeText.y = 42 + ((i) * 4) * 10

    }
    const days = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday"];
    let dayX = 100;
    for (let i = 0; i < days.length; i++) {
        var dayText = new PIXI.Text(days[i],
            {
                fontFamily: 'Arial',
                fontSize: 14,
                fill: 0x000000,
                align: 'center',
            });

        app.stage.addChild(dayText)
        // Position the text
        dayText.x = dayX + 15;
        dayText.y = 25;
        dayX += 110;
    }


    function doit() {
        //$("#save_me").hide();
    }
</script>*@

